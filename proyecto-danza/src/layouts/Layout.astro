---
// src/layouts/Layout.astro

// Importamos las fuentes para que estén disponibles globalmente
import "@fontsource/playfair-display/400.css";
import "@fontsource/playfair-display/700.css";
import "@fontsource/playfair-display/900.css";
import "@fontsource/playfair-display/400-italic.css";
import "@fontsource/inter/300.css";
import "@fontsource/inter/400.css";
import "@fontsource/inter/500.css";
import "@fontsource/inter/600.css";
import "@fontsource/inter/700.css";
import "@fontsource/bebas-neue";
import "@fontsource/oswald/700.css";

interface Props {
  title: string;
}

const { title } = Astro.props;
---

<!doctype html>
<html lang="es" class="!scroll-smooth">
  <head>
    <meta charset="UTF-8" />
    <meta
      name="description"
      content="Vega & Hugo - Donde el movimiento trasciende el espacio. Dúo de danza contemporánea que redefine los límites del arte escénico."
    />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta
      name="keywords"
      content="danza contemporánea, Vega y Hugo, dúo de danza, performance, arte escénico, Madrid, movimiento"
    />

    <!-- Open Graph / Facebook -->
    <meta property="og:type" content="website" />
    <meta property="og:title" content={title} />
    <meta
      property="og:description"
      content="Donde el movimiento trasciende el espacio. Experiencia inmersiva de danza contemporánea."
    />
    <meta property="og:image" content="/images/Duo.webp" />

    <!-- Twitter -->
    <meta property="twitter:card" content="summary_large_image" />
    <meta property="twitter:title" content={title} />
    <meta
      property="twitter:description"
      content="Donde el movimiento trasciende el espacio. Experiencia inmersiva de danza contemporánea."
    />
    <meta property="twitter:image" content="/images/Duo.webp" />

    <!-- Favicon -->
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />

    <title>{title}</title>
  </head>
  <body class="bg-[#0a0a0a] text-[#fafafa] overflow-x-hidden antialiased">
    <!-- Efectos visuales de fondo -->
    <div class="visual-effects-container">
      <!-- Noise texture overlay -->
      <div class="noise-overlay"></div>
      <!-- Scan lines -->
      <div class="scan-lines"></div>
      <!-- Vignette -->
      <div class="vignette"></div>
    </div>

    <!-- Cursor personalizado épico -->
    <div class="custom-cursor">
      <div class="cursor-ring"></div>
      <div class="cursor-dot"></div>
    </div>

    <!-- Barra de progreso de scroll -->
    <div class="scroll-progress-bar"></div>

    <!-- Efectos de luz ambiental -->
    <div class="ambient-lights">
      <div class="light light-1"></div>
      <div class="light light-2"></div>
      <div class="light light-3"></div>
    </div>

    <slot />

    <!-- Script global para efectos épicos -->
    <script>
      // @ts-nocheck
      // Sistema de cursor mejorado
      class EpicCursor {
        constructor() {
          this.cursor = document.querySelector(".custom-cursor");
          this.dot = document.querySelector(".cursor-dot");
          this.ring = document.querySelector(".cursor-ring");
          this.coords = { x: 0, y: 0 };
          this.isVisible = false;

          this.init();
        }

        init() {
          // Detectar movimiento del mouse
          document.addEventListener("mousemove", (e) => {
            this.coords.x = e.clientX;
            this.coords.y = e.clientY;

            if (!this.isVisible) {
              this.cursor.style.opacity = "1";
              this.isVisible = true;
            }
          });

          // Animación del cursor
          this.animateCursor();

          // Efectos hover mejorados
          const interactiveElements = document.querySelectorAll(
            "a, button, .hover-scale, .interactive"
          );

          interactiveElements.forEach((el) => {
            el.addEventListener("mouseenter", () => {
              this.cursor.classList.add("hover");
              this.createRipple(el);
            });

            el.addEventListener("mouseleave", () => {
              this.cursor.classList.remove("hover");
            });

            // Efecto magnético
            el.addEventListener("mousemove", (e) => {
              const rect = el.getBoundingClientRect();
              const mouseEvent = e;
              const x = mouseEvent.clientX - rect.left - rect.width / 2;
              const y = mouseEvent.clientY - rect.top - rect.height / 2;

              el.style.transform = `translate(${x * 0.1}px, ${y * 0.1}px)`;
            });

            el.addEventListener("mouseleave", () => {
              el.style.transform = "";
            });
          });

          // Click effect
          document.addEventListener("click", (e) => {
            this.createClickEffect(e.clientX, e.clientY);
          });
        }

        animateCursor() {
          const render = () => {
            this.cursor.style.transform = `translate(${this.coords.x}px, ${this.coords.y}px)`;
            requestAnimationFrame(render);
          };
          requestAnimationFrame(render);
        }

        createRipple(element) {
          const ripple = document.createElement("div");
          ripple.className = "cursor-ripple";
          element.appendChild(ripple);

          setTimeout(() => ripple.remove(), 1000);
        }

        createClickEffect(x, y) {
          const effect = document.createElement("div");
          effect.className = "click-effect";
          effect.style.left = x + "px";
          effect.style.top = y + "px";
          document.body.appendChild(effect);

          setTimeout(() => effect.remove(), 1500);
        }
      }

      // Inicializar cursor épico
      new EpicCursor();

      // Sistema de progreso de scroll
      class ScrollProgress {
        constructor() {
          this.progressBar = document.querySelector(".scroll-progress-bar");
          this.init();
        }

        init() {
          window.addEventListener("scroll", () => {
            const windowHeight = window.innerHeight;
            const documentHeight =
              document.documentElement.scrollHeight - windowHeight;
            const scrolled = window.scrollY;
            const progress = (scrolled / documentHeight) * 100;

            if (this.progressBar) {
              this.progressBar.style.width = `${progress}%`;

              // Cambiar color según el progreso
              if (progress > 80) {
                this.progressBar.style.background =
                  "linear-gradient(90deg, #d4af37, #ff6b6b)";
              } else if (progress > 50) {
                this.progressBar.style.background =
                  "linear-gradient(90deg, #d4af37, #ffd93d)";
              }
            }
          });
        }
      }

      new ScrollProgress();

      // Sistema de parallax avanzado
      class AdvancedParallax {
        constructor() {
          this.elements = [];
          this.init();
        }

        init() {
          // Recoger todos los elementos con parallax
          document.querySelectorAll("[data-parallax]").forEach((el) => {
            const htmlEl = el;
            this.elements.push({
              element: el,
              speed: parseFloat(htmlEl.dataset.parallax) || 0.5,
              offset: el.getBoundingClientRect().top + window.scrollY,
            });
          });

          // Animación en scroll
          window.addEventListener("scroll", () => this.updateParallax());
          this.updateParallax();
        }

        updateParallax() {
          const scrolled = window.scrollY;

          this.elements.forEach(({ element, speed, offset }) => {
            const yPos = -(scrolled - offset) * speed;
            element.style.transform = `translate3d(0, ${yPos}px, 0)`;
          });
        }
      }

      // Efectos de glitch mejorados
      class GlitchEffect {
        constructor() {
          this.glitchElements = document.querySelectorAll("[data-glitch]");
          this.init();
        }

        init() {
          this.glitchElements.forEach((element) => {
            // Crear capas de glitch
            const text = element.textContent;
            element.setAttribute("data-text", text);

            // Añadir efecto hover
            element.addEventListener("mouseenter", () => {
              element.classList.add("glitching");

              // Efecto de distorsión temporal
              setTimeout(() => {
                element.classList.remove("glitching");
              }, 600);
            });

            // Glitch aleatorio
            const htmlEl = element;
            if (htmlEl.dataset.glitch === "random") {
              setInterval(() => {
                if (Math.random() > 0.95) {
                  element.classList.add("glitching");
                  setTimeout(() => {
                    element.classList.remove("glitching");
                  }, 200);
                }
              }, 3000);
            }
          });
        }
      }

      // Sistema de luces ambientales
      class AmbientLights {
        constructor() {
          this.lights = document.querySelectorAll(".light");
          this.init();
        }

        init() {
          document.addEventListener("mousemove", (e) => {
            const x = e.clientX / window.innerWidth;
            const y = e.clientY / window.innerHeight;

            this.lights.forEach((light, index) => {
              const offsetX = (x - 0.5) * 100 * (index + 1);
              const offsetY = (y - 0.5) * 100 * (index + 1);

              light.style.transform = `translate(${offsetX}px, ${offsetY}px)`;
            });
          });
        }
      }

      // Inicializar todos los sistemas
      document.addEventListener("DOMContentLoaded", () => {
        new AdvancedParallax();
        new GlitchEffect();
        new AmbientLights();

        // Sistema de animación en viewport mejorado
        const observerOptions = {
          threshold: 0.1,
          rootMargin: "0px 0px -10% 0px",
        };

        const observer = new IntersectionObserver((entries) => {
          entries.forEach((entry) => {
            if (entry.isIntersecting) {
              entry.target.classList.add("in-view");

              // Efectos especiales según el tipo
              const htmlTarget = entry.target;
              const effect = htmlTarget.getAttribute("data-effect");
              if (effect === "fade-up") {
                htmlTarget.setAttribute(
                  "style",
                  "animation: fadeInUp 1.5s ease-out forwards"
                );
              } else if (effect === "zoom") {
                htmlTarget.setAttribute(
                  "style",
                  "animation: zoomIn 1s ease-out forwards"
                );
              } else if (effect === "slide") {
                htmlTarget.setAttribute(
                  "style",
                  "animation: slideIn 1.2s ease-out forwards"
                );
              }

              // Animación escalonada para hijos
              const children = entry.target.querySelectorAll(".stagger-child");
              children.forEach((child, index) => {
                setTimeout(() => {
                  child.classList.add("in-view");
                }, index * 100);
              });
            }
          });
        }, observerOptions);

        // Observar elementos
        document
          .querySelectorAll(".animate-on-scroll, [data-effect]")
          .forEach((el) => {
            observer.observe(el);
          });

        // Smooth scroll mejorado con efectos
        document.addEventListener("click", (e) => {
          const target = e.target;
          if (
            target &&
            target instanceof HTMLAnchorElement &&
            target.href.startsWith("#")
          ) {
            e.preventDefault();
            const targetId = target.getAttribute("href")?.substring(1);
            if (targetId) {
              const targetElement = document.getElementById(targetId);

              if (targetElement) {
                // Efecto de transición
                document.body.classList.add("scrolling");

                targetElement.scrollIntoView({
                  behavior: "smooth",
                  block: "start",
                });

                setTimeout(() => {
                  document.body.classList.remove("scrolling");
                }, 1000);
              }
            }
          }
        });
      });

      // Efecto de página cargada
      window.addEventListener("load", () => {
        document.body.classList.add("loaded");
      });
    </script>
  </body>
</html>

<style is:global>
  /* === VARIABLES CSS ÉPICAS === */
  :root {
    --color-black: #0a0a0a;
    --color-white: #fafafa;
    --color-gold: #d4af37;
    --color-gold-dark: #b8941f;
    --color-red: #ff6b6b;
    --color-gray: #888;
    --color-gray-dark: #333;
    --easing-smooth: cubic-bezier(0.645, 0.045, 0.355, 1);
    --easing-dramatic: cubic-bezier(0.76, 0, 0.24, 1);
    --easing-bounce: cubic-bezier(0.68, -0.55, 0.265, 1.55);
  }

  /* === RESET ÉPICO === */
  * {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
  }

  html {
    font-family: "Inter", system-ui, sans-serif;
    scroll-behavior: smooth;
    font-size: clamp(14px, 1.5vw, 18px);
    cursor: none;
  }

  body {
    line-height: 1.6;
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
    background: var(--color-black);
    color: var(--color-white);
    overflow-x: hidden;
    cursor: none;
  }

  body.loaded {
    animation: pageReveal 1.5s var(--easing-dramatic);
  }

  body.scrolling {
    transition: opacity 0.3s;
    opacity: 0.9;
  }

  @keyframes pageReveal {
    from {
      opacity: 0;
      filter: blur(20px) contrast(3);
    }
    to {
      opacity: 1;
      filter: blur(0) contrast(1);
    }
  }

  /* === CURSOR ÉPICO === */
  .custom-cursor {
    position: fixed;
    pointer-events: none;
    z-index: 10000;
    opacity: 0;
    transition: opacity 0.3s;
    mix-blend-mode: difference;
  }

  .cursor-dot {
    width: 8px;
    height: 8px;
    background: var(--color-gold);
    border-radius: 50%;
    position: absolute;
    top: -4px;
    left: -4px;
    transition: all 0.2s var(--easing-smooth);
  }

  .cursor-ring {
    width: 30px;
    height: 30px;
    border: 2px solid var(--color-gold);
    border-radius: 50%;
    position: absolute;
    top: -15px;
    left: -15px;
    transition: all 0.3s var(--easing-smooth);
    animation: cursorPulse 2s infinite;
  }

  @keyframes cursorPulse {
    0%,
    100% {
      transform: scale(1);
      opacity: 1;
    }
    50% {
      transform: scale(1.2);
      opacity: 0.5;
    }
  }

  .custom-cursor.hover .cursor-dot {
    width: 20px;
    height: 20px;
    top: -10px;
    left: -10px;
    background: var(--color-white);
  }

  .custom-cursor.hover .cursor-ring {
    width: 60px;
    height: 60px;
    top: -30px;
    left: -30px;
    border-color: var(--color-white);
    border-width: 1px;
  }

  /* Efecto de click */
  .click-effect {
    position: fixed;
    width: 40px;
    height: 40px;
    border-radius: 50%;
    border: 2px solid var(--color-gold);
    pointer-events: none;
    z-index: 9999;
    animation: clickRipple 1.5s ease-out;
  }

  @keyframes clickRipple {
    0% {
      transform: translate(-50%, -50%) scale(0);
      opacity: 1;
    }
    100% {
      transform: translate(-50%, -50%) scale(4);
      opacity: 0;
    }
  }

  /* Ripple effect */
  .cursor-ripple {
    position: absolute;
    width: 20px;
    height: 20px;
    border-radius: 50%;
    background: var(--color-gold);
    opacity: 0.3;
    animation: rippleExpand 1s ease-out;
    pointer-events: none;
  }

  @keyframes rippleExpand {
    0% {
      transform: scale(0);
      opacity: 0.3;
    }
    100% {
      transform: scale(10);
      opacity: 0;
    }
  }

  /* === EFECTOS VISUALES === */
  .visual-effects-container {
    position: fixed;
    inset: 0;
    pointer-events: none;
    z-index: 1;
  }

  /* Noise texture mejorado */
  .noise-overlay {
    position: absolute;
    inset: 0;
    opacity: 0.03;
    mix-blend-mode: overlay;
    background-image: repeating-radial-gradient(
        circle at 0 0,
        transparent 0,
        #ffffff 1px,
        transparent 2px,
        transparent 4px
      ),
      repeating-linear-gradient(
        0deg,
        transparent,
        transparent 2px,
        #ffffff 3px,
        transparent 4px
      );
    animation: noiseAnimation 8s steps(10) infinite;
  }

  @keyframes noiseAnimation {
    0%,
    100% {
      transform: translate(0, 0);
    }
    10% {
      transform: translate(-1%, -1%);
    }
    20% {
      transform: translate(1%, 1%);
    }
    30% {
      transform: translate(-1%, 1%);
    }
    40% {
      transform: translate(1%, -1%);
    }
    50% {
      transform: translate(-1%, 0);
    }
    60% {
      transform: translate(1%, 0);
    }
    70% {
      transform: translate(0, -1%);
    }
    80% {
      transform: translate(0, 1%);
    }
    90% {
      transform: translate(1%, 1%);
    }
  }

  /* Scan lines */
  .scan-lines {
    position: absolute;
    inset: 0;
    background-image: repeating-linear-gradient(
      0deg,
      transparent,
      transparent 2px,
      rgba(255, 255, 255, 0.01) 2px,
      rgba(255, 255, 255, 0.01) 4px
    );
    animation: scanlines 8s linear infinite;
  }

  @keyframes scanlines {
    0% {
      transform: translateY(0);
    }
    100% {
      transform: translateY(10px);
    }
  }

  /* Vignette */
  .vignette {
    position: absolute;
    inset: 0;
    background: radial-gradient(
      ellipse at center,
      transparent 0%,
      rgba(0, 0, 0, 0.8) 100%
    );
    mix-blend-mode: multiply;
  }

  /* === LUCES AMBIENTALES === */
  .ambient-lights {
    position: fixed;
    inset: 0;
    pointer-events: none;
    z-index: 2;
    overflow: hidden;
  }

  .light {
    position: absolute;
    border-radius: 50%;
    filter: blur(150px);
    opacity: 0.15;
    animation: lightFloat 20s ease-in-out infinite;
  }

  .light-1 {
    width: 600px;
    height: 600px;
    background: var(--color-gold);
    top: -20%;
    left: -10%;
    animation-duration: 25s;
  }

  .light-2 {
    width: 800px;
    height: 800px;
    background: var(--color-red);
    bottom: -30%;
    right: -20%;
    animation-duration: 30s;
    animation-delay: -5s;
  }

  .light-3 {
    width: 500px;
    height: 500px;
    background: var(--color-white);
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    animation-duration: 20s;
    animation-delay: -10s;
  }

  @keyframes lightFloat {
    0%,
    100% {
      transform: translate(0, 0) scale(1);
    }
    33% {
      transform: translate(30px, -30px) scale(1.1);
    }
    66% {
      transform: translate(-20px, 20px) scale(0.9);
    }
  }

  /* === BARRA DE PROGRESO === */
  .scroll-progress-bar {
    position: fixed;
    top: 0;
    left: 0;
    height: 3px;
    background: linear-gradient(90deg, var(--color-gold), var(--color-white));
    z-index: 1000;
    transition:
      width 0.1s,
      background 0.5s;
    width: 0%;
    box-shadow: 0 0 10px var(--color-gold);
  }

  /* === TIPOGRAFÍA ÉPICA === */
  .font-display {
    font-family: "Bebas Neue", "Playfair Display", serif;
    font-weight: 900;
    letter-spacing: 0.05em;
    text-transform: uppercase;
  }

  h1,
  h2,
  h3 {
    font-family: "Oswald", "Playfair Display", serif;
    font-weight: 700;
    line-height: 0.9;
    text-transform: uppercase;
    letter-spacing: 0.02em;
  }

  /* === ANIMACIONES ÉPICAS === */
  @keyframes fadeInUp {
    from {
      opacity: 0;
      transform: translateY(60px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  @keyframes zoomIn {
    from {
      opacity: 0;
      transform: scale(0.8);
    }
    to {
      opacity: 1;
      transform: scale(1);
    }
  }

  @keyframes slideIn {
    from {
      opacity: 0;
      transform: translateX(-100px);
    }
    to {
      opacity: 1;
      transform: translateX(0);
    }
  }

  /* === EFECTOS DE TEXTO === */
  .text-gradient-gold {
    background: linear-gradient(
      135deg,
      var(--color-gold) 0%,
      var(--color-white) 50%,
      var(--color-gold) 100%
    );
    background-size: 200% 200%;
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-clip: text;
    animation: gradient-shift 3s ease-in-out infinite;
  }

  @keyframes gradient-shift {
    0%,
    100% {
      background-position: 0% 50%;
    }
    50% {
      background-position: 100% 50%;
    }
  }

  /* === GLITCH EFFECT MEJORADO === */
  [data-glitch] {
    position: relative;
    color: var(--color-white);
    letter-spacing: 0.05em;
    animation: textShadow 3s infinite;
  }

  @keyframes textShadow {
    0%,
    100% {
      text-shadow:
        0 0 10px rgba(212, 175, 55, 0.5),
        0 0 20px rgba(212, 175, 55, 0.3);
    }
    50% {
      text-shadow:
        0 0 20px rgba(212, 175, 55, 0.8),
        0 0 40px rgba(212, 175, 55, 0.5);
    }
  }

  [data-glitch]:before,
  [data-glitch]:after {
    content: attr(data-text);
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    opacity: 0;
  }

  [data-glitch].glitching:before {
    animation: glitch-1 0.6s ease-out;
    color: var(--color-gold);
    z-index: -1;
    opacity: 0.8;
  }

  [data-glitch].glitching:after {
    animation: glitch-2 0.6s ease-out;
    color: var(--color-red);
    z-index: -2;
    opacity: 0.8;
  }

  @keyframes glitch-1 {
    0% {
      clip-path: inset(0 0 0 0);
      transform: translate(0);
    }
    20% {
      clip-path: inset(20% 0 60% 0);
      transform: translate(-2px, 2px);
    }
    40% {
      clip-path: inset(40% 0 30% 0);
      transform: translate(2px, -2px);
    }
    60% {
      clip-path: inset(60% 0 10% 0);
      transform: translate(-1px, 1px);
    }
    80% {
      clip-path: inset(80% 0 0% 0);
      transform: translate(1px, -1px);
    }
    100% {
      clip-path: inset(0 0 0 0);
      transform: translate(0);
    }
  }

  @keyframes glitch-2 {
    0% {
      clip-path: inset(0 0 0 0);
      transform: translate(0);
    }
    20% {
      clip-path: inset(0% 0 80% 0);
      transform: translate(2px, -1px);
    }
    40% {
      clip-path: inset(20% 0 60% 0);
      transform: translate(-2px, 1px);
    }
    60% {
      clip-path: inset(40% 0 40% 0);
      transform: translate(1px, -2px);
    }
    80% {
      clip-path: inset(60% 0 20% 0);
      transform: translate(-1px, 2px);
    }
    100% {
      clip-path: inset(0 0 0 0);
      transform: translate(0);
    }
  }

  /* === REVEAL ANIMATIONS === */
  .reveal-text {
    overflow: hidden;
    position: relative;
  }

  .reveal-text span {
    display: inline-block;
    transform: translateY(100%);
    transition: transform 1.5s var(--easing-dramatic);
  }

  .reveal-text.in-view span {
    transform: translateY(0);
    animation: revealBounce 1s var(--easing-bounce);
  }

  @keyframes revealBounce {
    0% {
      transform: translateY(100%);
    }
    60% {
      transform: translateY(-10%);
    }
    100% {
      transform: translateY(0);
    }
  }

  /* === FILTROS ARTÍSTICOS === */
  .art-filter {
    filter: grayscale(100%) contrast(1.3) brightness(0.9);
    transition: filter 0.8s var(--easing-smooth);
    position: relative;
    overflow: hidden;
  }

  .art-filter::after {
    content: "";
    position: absolute;
    inset: 0;
    background: linear-gradient(
      45deg,
      transparent 30%,
      rgba(212, 175, 55, 0.1) 50%,
      transparent 70%
    );
    transform: translateX(-100%);
    transition: transform 0.8s;
  }

  .art-filter:hover {
    filter: grayscale(0%) contrast(1.2) brightness(1.1) saturate(1.2);
  }

  .art-filter:hover::after {
    transform: translateX(100%);
  }

  /* === SCROLL PERSONALIZADO === */
  ::-webkit-scrollbar {
    width: 6px;
    background: var(--color-black);
  }

  ::-webkit-scrollbar-track {
    background: rgba(255, 255, 255, 0.02);
  }

  ::-webkit-scrollbar-thumb {
    background: linear-gradient(
      180deg,
      var(--color-gold),
      var(--color-gold-dark)
    );
    border-radius: 10px;
    box-shadow: 0 0 6px rgba(212, 175, 55, 0.5);
  }

  ::-webkit-scrollbar-thumb:hover {
    background: linear-gradient(
      180deg,
      var(--color-gold-dark),
      var(--color-gold)
    );
  }

  /* === UTILITIES ÉPICAS === */
  .hover-scale {
    transition: all 0.4s var(--easing-smooth);
    cursor: none;
  }

  .hover-scale:hover {
    transform: scale(1.05) translateY(-5px);
    filter: brightness(1.2);
  }

  .text-outline {
    -webkit-text-stroke: 2px var(--color-white);
    -webkit-text-fill-color: transparent;
    text-shadow: 0 0 30px rgba(255, 255, 255, 0.5);
  }

  .text-outline-gold {
    -webkit-text-stroke: 2px var(--color-gold);
    -webkit-text-fill-color: transparent;
    text-shadow: 0 0 30px rgba(212, 175, 55, 0.5);
  }

  /* === SOMBRAS ÉPICAS === */
  .epic-shadow {
    text-shadow:
      0 0 20px rgba(212, 175, 55, 0.8),
      0 0 40px rgba(212, 175, 55, 0.6),
      0 0 60px rgba(212, 175, 55, 0.4),
      0 0 80px rgba(212, 175, 55, 0.2);
  }

  .box-glow {
    box-shadow:
      0 0 20px rgba(212, 175, 55, 0.4),
      0 0 40px rgba(212, 175, 55, 0.3),
      0 0 60px rgba(212, 175, 55, 0.2),
      inset 0 0 20px rgba(212, 175, 55, 0.1);
    border: 1px solid rgba(212, 175, 55, 0.3);
  }

  .interactive {
    cursor: none;
    position: relative;
    overflow: hidden;
  }

  .interactive::before {
    content: "";
    position: absolute;
    top: 50%;
    left: 50%;
    width: 0;
    height: 0;
    border-radius: 50%;
    background: rgba(212, 175, 55, 0.3);
    transform: translate(-50%, -50%);
    transition:
      width 0.6s,
      height 0.6s;
  }

  .interactive:hover::before {
    width: 300px;
    height: 300px;
  }

  /* === RESPONSIVE ÉPICO === */
  @media (max-width: 768px) {
    .epic-shadow {
      text-shadow:
        0 0 10px rgba(212, 175, 55, 0.8),
        0 0 20px rgba(212, 175, 55, 0.4);
    }

    .light {
      filter: blur(100px);
    }

    .ambient-lights {
      opacity: 0.8;
    }
  }

  /* === PERFORMANCE === */
  @media (prefers-reduced-motion: reduce) {
    *,
    *::before,
    *::after {
      animation-duration: 0.01ms !important;
      animation-iteration-count: 1 !important;
      transition-duration: 0.01ms !important;
    }

    .parallax {
      transform: none !important;
    }

    .custom-cursor {
      display: none;
    }

    html {
      cursor: auto;
    }
  }

  /* === LOADING STATES === */
  .loading {
    position: relative;
    overflow: hidden;
  }

  .loading::after {
    content: "";
    position: absolute;
    top: 0;
    left: -100%;
    width: 100%;
    height: 100%;
    background: linear-gradient(
      90deg,
      transparent,
      rgba(212, 175, 55, 0.2),
      transparent
    );
    animation: loading-shine 1.5s infinite;
  }

  @keyframes loading-shine {
    100% {
      left: 100%;
    }
  }

  /* === NEON EFFECTS === */
  .neon-text {
    animation: neon-flicker 2s infinite alternate;
  }

  @keyframes neon-flicker {
    0%,
    100% {
      text-shadow:
        0 0 10px var(--color-gold),
        0 0 20px var(--color-gold),
        0 0 30px var(--color-gold),
        0 0 40px var(--color-gold-dark);
    }
    50% {
      text-shadow:
        0 0 5px var(--color-gold),
        0 0 10px var(--color-gold),
        0 0 15px var(--color-gold),
        0 0 20px var(--color-gold-dark);
    }
  }
  /* Estilos para el texto del título */
  .text-outline {
    -webkit-text-stroke: 1px rgba(255, 255, 255, 0.8);
    -webkit-text-fill-color: transparent;
  }
  .text-outline-gold {
    -webkit-text-stroke: 1px rgba(212, 175, 55, 0.8);
    -webkit-text-fill-color: transparent;
  }
  .glow-text {
    animation: glow 5s ease-in-out infinite alternate;
  }

  @keyframes glow {
    from {
      text-shadow:
        0 0 20px rgba(212, 175, 55, 0.3),
        0 0 30px rgba(212, 175, 55, 0.2);
    }
    to {
      text-shadow:
        0 0 40px rgba(212, 175, 55, 0.6),
        0 0 60px rgba(212, 175, 55, 0.4);
    }
  }

  /* Animaciones de fondo y luces */
  @keyframes slowZoom {
    from {
      transform: scale(1.25);
    }
    to {
      transform: scale(1.4);
    }
  }
  @keyframes lightRotate {
    from {
      transform: translate(-50%, -50%) rotate(0deg);
    }
    to {
      transform: translate(-50%, -50%) rotate(360deg);
    }
  }

  /* Partículas de Humo */
  .smoke-particle {
    position: absolute;
    width: 20vw;
    height: 20vw;
    background: radial-gradient(
      circle,
      rgba(255, 255, 255, 0.03) 0%,
      transparent 70%
    );
    border-radius: 50%;
    opacity: 0;
    animation-name: smoke-float;
    animation-timing-function: ease-in-out;
    animation-iteration-count: infinite;
  }
  @keyframes smoke-float {
    0% {
      transform: translateY(0) scale(1);
      opacity: 0;
    }
    20% {
      opacity: 0.2;
    }
    80% {
      opacity: 0.1;
    }
    100% {
      transform: translateY(-100vh) scale(2.5);
      opacity: 0;
    }
  }

  /* Partículas de Polvo */
  .dust-particle {
    position: absolute;
    width: 2px;
    height: 2px;
    background: rgba(255, 255, 255, 0.1);
    border-radius: 50%;
    opacity: 0;
    animation-name: dust-float;
    animation-timing-function: linear;
    animation-iteration-count: infinite;
  }
  @keyframes dust-float {
    0% {
      transform: translateY(0);
      opacity: 0;
    }
    50% {
      opacity: 1;
    }
    100% {
      transform: translateY(-100vh);
      opacity: 0;
    }
  }

  /* FIX: Para que la fuente del loading sea la correcta */
  .loading-text h2 {
    font-family: "Playfair Display", serif;
  }
</style>
